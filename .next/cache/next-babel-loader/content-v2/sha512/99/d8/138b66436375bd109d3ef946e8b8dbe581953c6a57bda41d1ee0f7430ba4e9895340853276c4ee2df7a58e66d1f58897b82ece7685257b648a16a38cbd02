{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"C:/Users/hadee/Desktop/sharpnerProjects/todoos/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:/Users/hadee/Desktop/sharpnerProjects/todoos/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/hadee/Desktop/sharpnerProjects/todoos/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\hadee\\\\Desktop\\\\sharpnerProjects\\\\todoos\\\\pages\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// pages/index.js\nimport { useState, useEffect } from 'react';\n\nvar Home = function Home() {\n  _s();\n\n  var _useState = useState([]),\n      todos = _useState[0],\n      setTodos = _useState[1];\n\n  var _useState2 = useState(''),\n      newTodo = _useState2[0],\n      setNewTodo = _useState2[1];\n\n  var fetchTodos = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch('/api/todos');\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return response.json();\n\n            case 6:\n              data = _context.sent;\n\n              if (data.success) {\n                setTodos(data.data);\n              }\n\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('Error fetching todos:', _context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n\n    return function fetchTodos() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var addTodo = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return fetch('/api/todos', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  text: newTodo\n                })\n              });\n\n            case 3:\n              response = _context2.sent;\n              _context2.next = 6;\n              return response.json();\n\n            case 6:\n              data = _context2.sent;\n\n              if (data.success) {\n                setTodos([].concat(_toConsumableArray(todos), [data.data]));\n                setNewTodo('');\n              }\n\n              _context2.next = 13;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('Error adding todo:', _context2.t0);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 10]]);\n    }));\n\n    return function addTodo() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    fetchTodos();\n  }, [setNewTodo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTodo,\n        onChange: function onChange(e) {\n          return setNewTodo(e.target.value);\n        },\n        placeholder: \"Add a new todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTodo,\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(function (todo) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: todo.text\n        }, todo._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Home, \"5IWrR3qlB9fd4Xrb4YgyFMm9peE=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/hadee/Desktop/sharpnerProjects/todoos/pages/index.js"],"names":["useState","useEffect","Home","todos","setTodos","newTodo","setNewTodo","fetchTodos","fetch","response","json","data","success","console","error","addTodo","method","headers","body","JSON","stringify","text","e","target","value","map","todo","_id"],"mappings":";;;;;;;;;AAAA;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AAAA,kBACSF,QAAQ,CAAC,EAAD,CADjB;AAAA,MACVG,KADU;AAAA,MACHC,QADG;;AAAA,mBAEaJ,QAAQ,CAAC,EAAD,CAFrB;AAAA,MAEVK,OAFU;AAAA,MAEDC,UAFC;;AAIjB,MAAMC,UAAU;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEQC,KAAK,CAAC,YAAD,CAFb;;AAAA;AAETC,cAAAA,QAFS;AAAA;AAAA,qBAGIA,QAAQ,CAACC,IAAT,EAHJ;;AAAA;AAGTC,cAAAA,IAHS;;AAIf,kBAAIA,IAAI,CAACC,OAAT,EAAkB;AAChBR,gBAAAA,QAAQ,CAACO,IAAI,CAACA,IAAN,CAAR;AACD;;AANc;AAAA;;AAAA;AAAA;AAAA;AAQfE,cAAAA,OAAO,CAACC,KAAR,CAAc,uBAAd;;AARe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVP,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAYA,MAAMQ,OAAO;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEWP,KAAK,CAAC,YAAD,EAAe;AACzCQ,gBAAAA,MAAM,EAAE,MADiC;AAEzCC,gBAAAA,OAAO,EAAE;AACP,kCAAgB;AADT,iBAFgC;AAKzCC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,kBAAAA,IAAI,EAAEhB;AAAR,iBAAf;AALmC,eAAf,CAFhB;;AAAA;AAENI,cAAAA,QAFM;AAAA;AAAA,qBAUOA,QAAQ,CAACC,IAAT,EAVP;;AAAA;AAUNC,cAAAA,IAVM;;AAWZ,kBAAIA,IAAI,CAACC,OAAT,EAAkB;AAChBR,gBAAAA,QAAQ,8BAAKD,KAAL,IAAYQ,IAAI,CAACA,IAAjB,GAAR;AACAL,gBAAAA,UAAU,CAAC,EAAD,CAAV;AACD;;AAdW;AAAA;;AAAA;AAAA;AAAA;AAgBZO,cAAAA,OAAO,CAACC,KAAR,CAAc,oBAAd;;AAhBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAPC,OAAO;AAAA;AAAA;AAAA,KAAb;;AAoBAd,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,UAAU;AACX,GAFQ,EAEN,CAACD,UAAD,CAFM,CAAT;AAIA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAED,OAFT;AAGE,QAAA,QAAQ,EAAE,kBAACiB,CAAD;AAAA,iBAAOhB,UAAU,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB;AAAA,SAHZ;AAIE,QAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,eADF,eAOE;AAAQ,QAAA,OAAO,EAAET,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPF;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,eAWE;AAAA,gBACGZ,KAAK,CAACsB,GAAN,CAAU,UAACC,IAAD;AAAA,4BACT;AAAA,oBAAoBA,IAAI,CAACL;AAAzB,WAASK,IAAI,CAACC,GAAd;AAAA;AAAA;AAAA;AAAA,iBADS;AAAA,OAAV;AADH;AAAA;AAAA;AAAA;AAAA,aAXF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAmBD,CA3DD;;GAAMzB,I;;KAAAA,I;AA6DN,eAAeA,IAAf","sourcesContent":["// pages/index.js\nimport { useState, useEffect } from 'react';\n\nconst Home = () => {\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState('');\n\n  const fetchTodos = async () => {\n    try {\n      const response = await fetch('/api/todos');\n      const data = await response.json();\n      if (data.success) {\n        setTodos(data.data);\n      }\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n    }\n  };\n\n  const addTodo = async () => {\n    try {\n      const response = await fetch('/api/todos', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ text: newTodo }),\n      });\n\n      const data = await response.json();\n      if (data.success) {\n        setTodos([...todos, data.data]);\n        setNewTodo('');\n      }\n    } catch (error) {\n      console.error('Error adding todo:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchTodos();\n  }, [setNewTodo]);\n\n  return (\n    <div>\n      <h1>Todo List</h1>\n      <div>\n        <input\n          type=\"text\"\n          value={newTodo}\n          onChange={(e) => setNewTodo(e.target.value)}\n          placeholder=\"Add a new todo\"\n        />\n        <button onClick={addTodo}>Add Todo</button>\n      </div>\n      <ul>\n        {todos.map((todo) => (\n          <li key={todo._id}>{todo.text}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}