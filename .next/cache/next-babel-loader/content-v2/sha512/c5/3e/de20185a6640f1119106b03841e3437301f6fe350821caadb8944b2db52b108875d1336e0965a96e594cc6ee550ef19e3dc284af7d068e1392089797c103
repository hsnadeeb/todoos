{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\hadee\\\\Desktop\\\\sharpnerProjects\\\\todoos\\\\pages\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// pages/index.js\nimport { useState, useEffect } from 'react';\nimport styles from '../styles/styles.module.css';\n\nconst Home = () => {\n  const {\n    0: todos,\n    1: setTodos\n  } = useState([]);\n  const {\n    0: newTodo,\n    1: setNewTodo\n  } = useState('');\n  const {\n    0: editingTodo,\n    1: setEditingTodo\n  } = useState(null);\n  const {\n    0: editedText,\n    1: setEditedText\n  } = useState(''); // Track the todo being edited\n\n  const fetchTodos = async () => {\n    try {\n      const response = await fetch('/api/todos');\n      const data = await response.json();\n\n      if (data.success) {\n        setTodos(data.data);\n      }\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n    }\n  };\n\n  const addTodo = async () => {\n    try {\n      const response = await fetch('/api/todos', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: newTodo\n        })\n      });\n      const data = await response.json();\n\n      if (data.success) {\n        setTodos([...todos, data.data]);\n        setNewTodo('');\n      }\n    } catch (error) {\n      console.error('Error adding todo:', error);\n    }\n  };\n\n  const editTodo = async id => {\n    const editedText = prompt('Edit todo:', editingTodo.text);\n\n    if (editedText !== null) {\n      try {\n        const response = await fetch(`/api/todos/${id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            text: editedText\n          })\n        });\n        const data = await response.json();\n\n        if (data.success) {\n          const updatedTodos = todos.map(todo => todo._id === id ? _objectSpread(_objectSpread({}, todo), {}, {\n            text: editedText\n          }) : todo);\n          setTodos(updatedTodos);\n          setEditingTodo(null);\n        }\n      } catch (error) {\n        console.error('Error editing todo:', error);\n      }\n    }\n  };\n\n  const deleteTodo = async id => {\n    if (window.confirm('Are you sure you want to delete this todo?')) {\n      try {\n        const response = await fetch(`/api/todos/${id}`, {\n          method: 'DELETE'\n        });\n        const data = await response.json();\n\n        if (data.success) {\n          const updatedTodos = todos.filter(todo => todo._id !== id);\n          setTodos(updatedTodos);\n        }\n      } catch (error) {\n        console.error('Error deleting todo:', error);\n      }\n    }\n  };\n\n  useEffect(() => {\n    fetchTodos();\n  }, [setNewTodo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.todo - form,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTodo,\n        onChange: e => setNewTodo(e.target.value),\n        placeholder: \"Add a new todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTodo,\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.todo - list,\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: styles.todo - item,\n        children: editingTodo === todo ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editedText,\n            onChange: e => setEditedText(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => editTodo(todo._id),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEditingTodo(null),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: todo.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setEditingTodo(todo),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteTodo(todo._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, todo._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this) //    <div>\n  //   <h1>Todo List</h1>\n  //   <div>\n  //     <input\n  //       type=\"text\"\n  //       value={newTodo}\n  //       onChange={(e) => setNewTodo(e.target.value)}\n  //       placeholder=\"Add a new todo\"\n  //     />\n  //     <button onClick={addTodo}>Add Todo</button>\n  //   </div>\n  //   <ul>\n  //     {todos.map((todo) => (\n  //       <li key={todo._id}>\n  //         {editingTodo === todo ? (\n  //           <>\n  //             <input\n  //               type=\"text\"\n  //               value={editingTodo.text}\n  //               onChange={(e) => setEditingTodo({ ...editingTodo, text: e.target.value })}\n  //             />\n  //             <button onClick={() => editTodo(todo._id)}>Save</button>\n  //             <button onClick={() => setEditingTodo(null)}>Cancel</button>\n  //           </>\n  //         ) : (\n  //           <>\n  //             {todo.text}\n  //             <button onClick={() => setEditingTodo(todo)}>Edit</button>\n  //             <button onClick={() => deleteTodo(todo._id)}>Delete</button>\n  //           </>\n  //         )}\n  //       </li>\n  //     ))}\n  //   </ul>\n  // </div>\n  ;\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/hadee/Desktop/sharpnerProjects/todoos/pages/index.js"],"names":["useState","useEffect","styles","Home","todos","setTodos","newTodo","setNewTodo","editingTodo","setEditingTodo","editedText","setEditedText","fetchTodos","response","fetch","data","json","success","error","console","addTodo","method","headers","body","JSON","stringify","text","editTodo","id","prompt","updatedTodos","map","todo","_id","deleteTodo","window","confirm","filter","container","form","e","target","value","list","item"],"mappings":"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","sourcesContent":["// pages/index.js\nimport { useState, useEffect } from 'react';\nimport styles from '../styles/styles.module.css';\n\nconst Home = () => {\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState('');\n  const [editingTodo, setEditingTodo] = useState(null); \n  const [editedText, setEditedText] = useState('');// Track the todo being edited\n\n  const fetchTodos = async () => {\n    try {\n      const response = await fetch('/api/todos');\n      const data = await response.json();\n      if (data.success) {\n        setTodos(data.data);\n      }\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n    }\n  };\n\n  const addTodo = async () => {\n    try {\n      const response = await fetch('/api/todos', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ text: newTodo }),\n      });\n\n      const data = await response.json();\n      if (data.success) {\n        setTodos([...todos, data.data]);\n        setNewTodo('');\n      }\n    } catch (error) {\n      console.error('Error adding todo:', error);\n    }\n  };\n\n  const editTodo = async (id) => {\n    const editedText = prompt('Edit todo:', editingTodo.text);\n    if (editedText !== null) {\n      try {\n        const response = await fetch(`/api/todos/${id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ text: editedText }),\n        });\n\n        const data = await response.json();\n        if (data.success) {\n          const updatedTodos = todos.map((todo) =>\n            todo._id === id ? { ...todo, text: editedText } : todo\n          );\n          setTodos(updatedTodos);\n          setEditingTodo(null);\n        }\n      } catch (error) {\n        console.error('Error editing todo:', error);\n      }\n    }\n  };\n\n  const deleteTodo = async (id) => {\n    if (window.confirm('Are you sure you want to delete this todo?')) {\n      try {\n        const response = await fetch(`/api/todos/${id}`, {\n          method: 'DELETE',\n        });\n\n        const data = await response.json();\n        if (data.success) {\n          const updatedTodos = todos.filter((todo) => todo._id !== id);\n          setTodos(updatedTodos);\n        }\n      } catch (error) {\n        console.error('Error deleting todo:', error);\n      }\n    }\n  };\n\n  useEffect(() => {\n    fetchTodos();\n  }, [setNewTodo]);\n\n  return (\n\n    <div className={styles.container}>\n      <h1>Todo List</h1>\n      <div className={styles.todo-form}>\n        <input\n          type=\"text\"\n          value={newTodo}\n          onChange={(e) => setNewTodo(e.target.value)}\n          placeholder=\"Add a new todo\"\n        />\n        <button onClick={addTodo}>Add Todo</button>\n      </div>\n      <ul className={styles.todo-list}>\n        {todos.map((todo) => (\n          <li key={todo._id} className={styles.todo-item}>\n            {editingTodo === todo ? (\n              <>\n                <input\n                  type=\"text\"\n                  value={editedText}\n                  onChange={(e) => setEditedText(e.target.value)}\n                />\n                <button onClick={() => editTodo(todo._id)}>Save</button>\n                <button onClick={() => setEditingTodo(null)}>Cancel</button>\n              </>\n            ) : (\n              <>\n                <div>{todo.text}</div>\n                <div>\n                  <button onClick={() => setEditingTodo(todo)}>Edit</button>\n                  <button onClick={() => deleteTodo(todo._id)}>Delete</button>\n                </div>\n              </>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  //    <div>\n  //   <h1>Todo List</h1>\n  //   <div>\n  //     <input\n  //       type=\"text\"\n  //       value={newTodo}\n  //       onChange={(e) => setNewTodo(e.target.value)}\n  //       placeholder=\"Add a new todo\"\n  //     />\n  //     <button onClick={addTodo}>Add Todo</button>\n  //   </div>\n  //   <ul>\n  //     {todos.map((todo) => (\n  //       <li key={todo._id}>\n  //         {editingTodo === todo ? (\n  //           <>\n  //             <input\n  //               type=\"text\"\n  //               value={editingTodo.text}\n  //               onChange={(e) => setEditingTodo({ ...editingTodo, text: e.target.value })}\n  //             />\n  //             <button onClick={() => editTodo(todo._id)}>Save</button>\n  //             <button onClick={() => setEditingTodo(null)}>Cancel</button>\n  //           </>\n  //         ) : (\n  //           <>\n  //             {todo.text}\n  //             <button onClick={() => setEditingTodo(todo)}>Edit</button>\n  //             <button onClick={() => deleteTodo(todo._id)}>Delete</button>\n  //           </>\n  //         )}\n  //       </li>\n  //     ))}\n  //   </ul>\n  // </div>\n  );\n};\n\nexport default Home;\n\n\n"]},"metadata":{},"sourceType":"module"}